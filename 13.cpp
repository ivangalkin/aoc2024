#include <algorithm>
#include <array>
#include <iomanip>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <optional>
#include <set>
#include <sstream>
#include <tuple>
#include <vector>

#ifdef NDEBUG
#undef NDEBUG
#endif
#include <assert.h>

#define ASSERT_EQ(a, b)                                                        \
  do {                                                                         \
    __typeof__(a) _a = (a);                                                    \
    __typeof__(b) _b = (b);                                                    \
    if (_a != _b) {                                                            \
      std::cout << _a << " != " << _b << std::endl;                            \
      assert(0);                                                               \
    }                                                                          \
  } while (0)

#define myprint(arg)                                                           \
  do {                                                                         \
    std::cout << "" #arg << " = " << arg << std::endl;                         \
  } while (0)

using ll = int64_t;

namespace {

struct Machine {
  std::tuple<ll, ll> _inc_a;
  std::tuple<ll, ll> _inc_b;
  std::tuple<ll, ll> _prize;
};

std::vector<Machine> input_real{
    {{83, 59}, {34, 99}, {4485, 8127}},   {{13, 33}, {57, 19}, {13101, 9731}},
    {{18, 60}, {83, 58}, {9765, 10902}},  {{22, 54}, {29, 17}, {11432, 5896}},
    {{64, 24}, {12, 23}, {3912, 2466}},   {{11, 87}, {88, 86}, {7612, 14454}},
    {{73, 50}, {29, 87}, {5751, 9310}},   {{21, 41}, {53, 11}, {13562, 5160}},
    {{13, 34}, {70, 39}, {7577, 6540}},   {{23, 52}, {60, 35}, {4561, 15619}},
    {{78, 31}, {13, 69}, {2769, 4356}},   {{92, 42}, {37, 81}, {9380, 8898}},
    {{69, 41}, {18, 71}, {4197, 7077}},   {{16, 69}, {71, 62}, {3327, 8243}},
    {{35, 15}, {19, 47}, {19679, 16267}}, {{17, 54}, {50, 24}, {15748, 15296}},
    {{38, 26}, {11, 30}, {3005, 4236}},   {{31, 68}, {63, 22}, {7995, 14780}},
    {{58, 18}, {30, 74}, {11992, 1888}},  {{86, 12}, {28, 44}, {9118, 4600}},
    {{20, 39}, {41, 14}, {4755, 4326}},   {{54, 93}, {80, 11}, {6364, 6523}},
    {{53, 30}, {14, 29}, {12053, 9374}},  {{20, 78}, {93, 58}, {4373, 4562}},
    {{17, 40}, {52, 37}, {745, 7809}},    {{84, 32}, {50, 63}, {6626, 5469}},
    {{28, 57}, {57, 15}, {8045, 11162}},  {{80, 17}, {38, 50}, {3662, 1994}},
    {{27, 70}, {50, 21}, {5823, 8253}},   {{72, 32}, {62, 90}, {6540, 7028}},
    {{88, 28}, {70, 79}, {8992, 5584}},   {{50, 89}, {70, 30}, {11130, 10919}},
    {{27, 48}, {43, 18}, {17836, 1244}},  {{94, 12}, {70, 96}, {8188, 3396}},
    {{42, 48}, {78, 21}, {7482, 5280}},   {{34, 78}, {91, 67}, {6544, 8208}},
    {{67, 43}, {13, 29}, {5459, 1019}},   {{45, 24}, {13, 43}, {17179, 13624}},
    {{59, 28}, {19, 44}, {5712, 7552}},   {{49, 16}, {36, 66}, {5605, 14614}},
    {{22, 13}, {31, 56}, {7729, 722}},    {{42, 61}, {27, 11}, {3246, 3868}},
    {{19, 46}, {63, 37}, {3057, 3818}},   {{82, 18}, {24, 94}, {8468, 3456}},
    {{22, 79}, {47, 39}, {4634, 6518}},   {{50, 69}, {96, 39}, {2720, 1884}},
    {{55, 62}, {78, 22}, {7064, 3480}},   {{73, 40}, {29, 49}, {5489, 5524}},
    {{20, 76}, {66, 12}, {4632, 3580}},   {{31, 74}, {59, 12}, {17302, 2696}},
    {{36, 25}, {14, 34}, {2226, 5848}},   {{25, 64}, {63, 12}, {2233, 5872}},
    {{68, 30}, {22, 48}, {3872, 3240}},   {{17, 50}, {32, 14}, {7264, 15250}},
    {{24, 65}, {35, 12}, {19202, 14787}}, {{57, 26}, {16, 40}, {10077, 4906}},
    {{35, 22}, {14, 85}, {2954, 2695}},   {{96, 76}, {19, 58}, {6647, 8570}},
    {{18, 79}, {73, 37}, {3550, 4245}},   {{62, 17}, {45, 55}, {8797, 5697}},
    {{55, 26}, {18, 40}, {17928, 9376}},  {{43, 17}, {46, 69}, {2612, 2433}},
    {{27, 47}, {41, 14}, {2702, 4474}},   {{22, 39}, {25, 11}, {10587, 8043}},
    {{12, 84}, {91, 18}, {4269, 5742}},   {{26, 63}, {58, 17}, {11748, 18204}},
    {{41, 74}, {47, 17}, {13607, 9098}},  {{49, 33}, {12, 35}, {13252, 3498}},
    {{52, 24}, {40, 90}, {3104, 4008}},   {{24, 78}, {72, 42}, {6816, 7368}},
    {{28, 85}, {86, 51}, {7430, 6800}},   {{74, 36}, {19, 52}, {3944, 3800}},
    {{27, 11}, {15, 21}, {1508, 4370}},   {{44, 81}, {20, 12}, {3692, 5928}},
    {{53, 26}, {14, 48}, {4780, 11140}},  {{51, 77}, {96, 26}, {12150, 8472}},
    {{54, 15}, {17, 66}, {9908, 13556}},  {{70, 11}, {15, 64}, {15390, 7930}},
    {{35, 56}, {89, 16}, {4953, 1984}},   {{43, 13}, {38, 80}, {4706, 17042}},
    {{47, 29}, {12, 41}, {1605, 12525}},  {{66, 11}, {62, 61}, {7346, 5987}},
    {{40, 67}, {53, 23}, {7380, 19395}},  {{22, 93}, {93, 31}, {6923, 4278}},
    {{97, 33}, {73, 96}, {9315, 4023}},   {{38, 95}, {88, 67}, {5104, 9700}},
    {{11, 60}, {37, 15}, {16170, 8135}},  {{53, 22}, {27, 48}, {19789, 11586}},
    {{64, 34}, {16, 54}, {15216, 3216}},  {{16, 93}, {86, 51}, {4134, 9216}},
    {{75, 56}, {13, 98}, {8321, 14336}},  {{59, 15}, {36, 66}, {8402, 7764}},
    {{13, 99}, {81, 92}, {7139, 10804}},  {{86, 23}, {69, 85}, {5646, 2974}},
    {{79, 12}, {86, 77}, {6283, 1338}},   {{39, 63}, {40, 11}, {6530, 5455}},
    {{26, 64}, {41, 18}, {15008, 4724}},  {{30, 68}, {64, 25}, {14928, 7306}},
    {{20, 83}, {84, 76}, {4868, 8753}},   {{11, 62}, {44, 11}, {12332, 19376}},
    {{31, 58}, {78, 22}, {2163, 1940}},   {{78, 25}, {17, 37}, {3296, 3265}},
    {{73, 50}, {11, 25}, {3221, 2525}},   {{27, 42}, {98, 33}, {1807, 1497}},
    {{13, 58}, {35, 12}, {15361, 3534}},  {{30, 83}, {46, 11}, {17514, 7809}},
    {{15, 58}, {62, 12}, {3563, 458}},    {{22, 28}, {90, 27}, {5552, 1901}},
    {{68, 45}, {12, 41}, {18572, 7041}},  {{39, 15}, {35, 97}, {1349, 853}},
    {{45, 81}, {53, 23}, {6599, 5507}},   {{72, 85}, {86, 16}, {9734, 8327}},
    {{18, 41}, {60, 41}, {8834, 8594}},   {{48, 29}, {12, 25}, {2696, 250}},
    {{91, 30}, {38, 65}, {4446, 2830}},   {{13, 95}, {94, 73}, {1464, 6401}},
    {{90, 35}, {21, 42}, {5376, 4662}},   {{57, 18}, {33, 74}, {14663, 2422}},
    {{40, 19}, {14, 59}, {16340, 10835}}, {{64, 31}, {24, 56}, {12560, 17240}},
    {{61, 20}, {53, 69}, {7318, 4774}},   {{41, 13}, {30, 66}, {6542, 4802}},
    {{15, 42}, {67, 35}, {13213, 3021}},  {{26, 64}, {64, 31}, {12694, 18446}},
    {{42, 97}, {98, 29}, {10304, 10576}}, {{99, 27}, {17, 51}, {7846, 5988}},
    {{53, 15}, {78, 94}, {5597, 6403}},   {{57, 56}, {12, 56}, {4203, 8064}},
    {{52, 23}, {15, 75}, {1797, 4008}},   {{60, 16}, {12, 48}, {296, 12064}},
    {{85, 51}, {21, 45}, {7048, 5136}},   {{38, 12}, {19, 53}, {9335, 4557}},
    {{29, 11}, {30, 61}, {1570, 18306}},  {{49, 16}, {30, 69}, {14751, 5106}},
    {{31, 95}, {91, 54}, {6569, 9337}},   {{12, 91}, {73, 92}, {2545, 7760}},
    {{64, 25}, {17, 37}, {1194, 770}},    {{92, 21}, {52, 55}, {9612, 3833}},
    {{12, 60}, {67, 25}, {720, 6240}},    {{37, 51}, {84, 26}, {6863, 3983}},
    {{26, 12}, {50, 76}, {4794, 4620}},   {{19, 41}, {46, 22}, {2411, 8601}},
    {{19, 56}, {69, 16}, {13155, 13040}}, {{72, 30}, {42, 94}, {5508, 3672}},
    {{63, 20}, {25, 75}, {19764, 19285}}, {{28, 60}, {68, 32}, {2108, 16436}},
    {{19, 59}, {68, 27}, {14827, 17875}}, {{12, 17}, {33, 14}, {3647, 3114}},
    {{19, 63}, {96, 62}, {10716, 11182}}, {{74, 45}, {11, 34}, {13265, 7642}},
    {{77, 46}, {20, 62}, {2769, 5308}},   {{43, 94}, {72, 31}, {9646, 10343}},
    {{49, 15}, {31, 56}, {13234, 13663}}, {{44, 13}, {25, 97}, {4209, 6710}},
    {{74, 40}, {41, 89}, {3502, 2294}},   {{36, 51}, {91, 33}, {5598, 2751}},
    {{59, 24}, {16, 44}, {4064, 2468}},   {{22, 91}, {79, 15}, {6841, 6161}},
    {{32, 54}, {44, 17}, {1872, 15556}},  {{13, 63}, {54, 24}, {4034, 6714}},
    {{20, 32}, {44, 17}, {11608, 1474}},  {{26, 63}, {84, 48}, {9460, 9546}},
    {{28, 71}, {47, 11}, {1620, 2377}},   {{48, 20}, {31, 57}, {848, 8776}},
    {{98, 79}, {88, 12}, {6120, 3460}},   {{23, 76}, {88, 60}, {7772, 6988}},
    {{12, 40}, {29, 18}, {1049, 6842}},   {{11, 45}, {70, 20}, {4943, 2215}},
    {{36, 90}, {79, 48}, {3738, 4860}},   {{22, 61}, {88, 32}, {8932, 5050}},
    {{15, 52}, {57, 15}, {11138, 7095}},  {{31, 74}, {55, 35}, {5894, 8581}},
    {{76, 67}, {25, 89}, {6388, 9917}},   {{11, 56}, {83, 58}, {3439, 4384}},
    {{37, 14}, {26, 59}, {8358, 18072}},  {{59, 32}, {24, 47}, {11808, 869}},
    {{92, 30}, {19, 67}, {2253, 5295}},   {{93, 17}, {12, 99}, {1152, 3502}},
    {{52, 45}, {70, 11}, {3526, 1217}},   {{19, 45}, {35, 14}, {7874, 15842}},
    {{20, 93}, {72, 40}, {3652, 3421}},   {{72, 21}, {49, 71}, {6351, 6786}},
    {{72, 53}, {11, 27}, {18294, 7815}},  {{48, 25}, {29, 56}, {5972, 1830}},
    {{77, 17}, {13, 52}, {9074, 11897}},  {{49, 15}, {28, 62}, {15103, 14661}},
    {{36, 88}, {92, 13}, {5776, 4796}},   {{44, 16}, {31, 73}, {2843, 18061}},
    {{89, 44}, {43, 88}, {7099, 4444}},   {{59, 20}, {13, 46}, {17500, 18952}},
    {{13, 58}, {84, 36}, {5785, 15058}},  {{61, 35}, {22, 69}, {4878, 6858}},
    {{16, 70}, {63, 19}, {12012, 19664}}, {{11, 67}, {79, 13}, {16267, 13249}},
    {{75, 34}, {13, 39}, {10901, 16433}}, {{27, 11}, {12, 50}, {17273, 16755}},
    {{79, 55}, {25, 64}, {5181, 3840}},   {{34, 85}, {69, 19}, {5887, 3512}},
    {{31, 59}, {45, 25}, {17426, 3314}},  {{28, 15}, {12, 56}, {1696, 5717}},
    {{75, 28}, {57, 90}, {8934, 9314}},   {{23, 49}, {41, 16}, {3569, 10787}},
    {{82, 64}, {95, 12}, {9247, 4172}},   {{13, 48}, {46, 14}, {9433, 5068}},
    {{43, 19}, {16, 56}, {8566, 14078}},  {{81, 30}, {41, 98}, {1865, 1022}},
    {{26, 60}, {57, 20}, {3920, 5700}},   {{64, 27}, {13, 24}, {6126, 3288}},
    {{18, 36}, {45, 14}, {6398, 5228}},   {{43, 18}, {18, 45}, {15434, 12194}},
    {{21, 72}, {68, 11}, {19333, 17956}}, {{52, 75}, {51, 11}, {5597, 3631}},
    {{33, 74}, {51, 13}, {12764, 3562}},  {{45, 17}, {27, 42}, {1646, 18249}},
    {{78, 49}, {18, 63}, {5688, 3780}},   {{47, 15}, {31, 68}, {6457, 3672}},
    {{98, 22}, {96, 93}, {7950, 4857}},   {{74, 27}, {12, 58}, {4400, 4072}},
    {{13, 29}, {87, 35}, {2568, 2388}},   {{38, 74}, {53, 20}, {4920, 12732}},
    {{15, 75}, {88, 35}, {1868, 4885}},   {{18, 78}, {74, 62}, {1320, 4944}},
    {{89, 16}, {33, 92}, {7969, 5736}},   {{34, 14}, {13, 27}, {3971, 2869}},
    {{93, 13}, {65, 80}, {11240, 4195}},  {{75, 38}, {56, 90}, {12426, 12212}},
    {{12, 38}, {82, 14}, {6374, 4216}},   {{14, 13}, {12, 82}, {1074, 2131}},
    {{69, 43}, {25, 90}, {4725, 6740}},   {{28, 11}, {61, 79}, {16218, 7104}},
    {{19, 70}, {71, 14}, {14609, 578}},   {{82, 57}, {11, 28}, {15455, 13471}},
    {{97, 31}, {46, 78}, {7469, 8527}},   {{82, 15}, {13, 67}, {3923, 561}},
    {{15, 91}, {70, 22}, {4975, 1995}},   {{37, 21}, {22, 50}, {13654, 13634}},
    {{39, 15}, {18, 67}, {18395, 820}},   {{28, 11}, {32, 43}, {19024, 8967}},
    {{54, 22}, {58, 78}, {4364, 5312}},   {{83, 55}, {30, 62}, {4125, 3281}},
    {{65, 32}, {14, 29}, {7440, 1215}},   {{20, 40}, {57, 21}, {7224, 9652}},
    {{13, 50}, {60, 24}, {8386, 16500}},  {{71, 20}, {64, 90}, {4960, 4420}},
    {{35, 21}, {22, 57}, {2033, 3804}},   {{13, 73}, {84, 11}, {19057, 11087}},
    {{12, 68}, {91, 23}, {1769, 4605}},   {{63, 28}, {19, 98}, {6417, 6076}},
    {{65, 28}, {22, 57}, {8245, 526}},    {{22, 11}, {27, 62}, {13424, 17229}},
    {{96, 18}, {52, 79}, {8624, 3002}},   {{39, 15}, {19, 69}, {3415, 3411}},
    {{19, 46}, {40, 22}, {10332, 16596}}, {{69, 39}, {24, 62}, {3045, 4385}},
    {{48, 57}, {13, 74}, {2537, 4711}},   {{64, 34}, {14, 37}, {15052, 7562}},
    {{27, 75}, {75, 34}, {3024, 5262}},   {{41, 42}, {81, 19}, {7145, 2777}},
    {{11, 46}, {67, 19}, {13888, 12889}}, {{14, 62}, {64, 24}, {10904, 5320}},
    {{31, 84}, {62, 38}, {5301, 7344}},   {{43, 86}, {83, 51}, {5773, 8671}},
    {{86, 15}, {91, 98}, {11011, 4795}},  {{15, 84}, {42, 29}, {2946, 5569}},
    {{45, 20}, {17, 41}, {15828, 1629}},  {{40, 39}, {15, 72}, {2645, 5046}},
    {{29, 91}, {63, 28}, {2284, 4452}},   {{24, 69}, {70, 14}, {18426, 13552}},
    {{78, 24}, {51, 90}, {7020, 6024}},   {{62, 12}, {64, 84}, {8872, 6372}},
    {{95, 56}, {34, 61}, {3867, 5679}},   {{67, 13}, {48, 81}, {10016, 8897}},
    {{17, 49}, {70, 28}, {8069, 10413}},  {{21, 47}, {69, 31}, {10964, 508}},
    {{18, 46}, {70, 45}, {19446, 14497}}, {{21, 68}, {85, 71}, {5587, 5020}},
    {{15, 87}, {72, 18}, {2814, 5532}},   {{50, 89}, {83, 30}, {10887, 8900}},
    {{14, 39}, {40, 18}, {16352, 18920}}, {{18, 53}, {41, 18}, {16105, 5175}},
    {{30, 84}, {99, 40}, {9792, 8916}},   {{46, 75}, {44, 16}, {17188, 4110}},
    {{14, 30}, {60, 38}, {5124, 898}},    {{90, 36}, {60, 90}, {8820, 5310}},
    {{58, 19}, {15, 32}, {14828, 18209}}, {{86, 80}, {27, 89}, {2255, 3567}},
    {{51, 71}, {88, 15}, {5075, 4915}},   {{14, 89}, {23, 27}, {2741, 8007}},
    {{36, 14}, {43, 75}, {14047, 3583}},  {{23, 76}, {60, 12}, {17279, 13868}},
    {{22, 45}, {61, 36}, {5571, 17909}},  {{56, 23}, {18, 57}, {11704, 14914}},
    {{65, 61}, {18, 81}, {2217, 2337}},   {{13, 68}, {66, 24}, {16932, 18832}},
    {{22, 50}, {64, 34}, {14004, 3484}},  {{94, 69}, {22, 77}, {1556, 2846}},
    {{32, 42}, {89, 19}, {3478, 3978}},   {{90, 53}, {38, 74}, {2530, 4071}},
    {{63, 22}, {17, 39}, {16083, 16531}}, {{56, 74}, {73, 13}, {2393, 2411}},
    {{29, 83}, {46, 37}, {4013, 7226}},   {{73, 47}, {13, 56}, {5764, 4235}},
    {{15, 71}, {49, 13}, {13956, 11004}}, {{22, 62}, {66, 14}, {11760, 14244}},
    {{19, 53}, {40, 18}, {1697, 10527}},  {{88, 22}, {49, 78}, {12153, 8364}},
    {{14, 71}, {46, 13}, {9516, 14718}},  {{69, 41}, {27, 52}, {5726, 16245}},
    {{23, 67}, {83, 24}, {6587, 4379}},   {{25, 54}, {76, 46}, {3269, 4816}},
    {{77, 86}, {58, 12}, {8115, 6794}},   {{82, 45}, {22, 69}, {7220, 5670}},
    {{41, 16}, {15, 62}, {10570, 7964}},  {{97, 14}, {70, 78}, {8362, 3108}},
    {{13, 80}, {86, 23}, {727, 424}},     {{24, 99}, {90, 79}, {6030, 7631}},
    {{72, 34}, {18, 45}, {2168, 19786}},  {{97, 14}, {11, 83}, {2909, 4002}},
    {{78, 13}, {15, 68}, {7430, 18378}},  {{57, 27}, {22, 48}, {4328, 4380}}};

decltype(input_real) input_test;
//    auto &input = input_test;
auto &input = input_real;

std::vector<std::tuple<ll, ll>> check1(const Machine &m) {
  std::vector<std::tuple<ll, ll>> combinations;
  auto [a_dx, a_dy] = m._inc_a;
  auto [b_dx, b_dy] = m._inc_b;
  auto [price_x, price_y] = m._prize;
  for (ll a = 0; a <= 100; a++) {
    for (ll b = 0; b <= 100; b++) {
      if (a_dx * a + b_dx * b == price_x && a_dy * a + b_dy * b == price_y) {
        combinations.push_back({a, b});
      }
    }
  }
  return combinations;
};

std::vector<std::tuple<ll, ll>> check2(const Machine &m) {
  std::vector<std::tuple<ll, ll>> combinations;
  auto [a_dx, a_dy] = m._inc_a;
  auto [b_dx, b_dy] = m._inc_b;
  auto [price_x, price_y] = m._prize;

  long double s0 = a_dx * b_dy;
  long double s1 = s0 / b_dx;
  long double s2 = a_dy - s1;
  long double s3 = price_x * b_dy;
  long double s4 = s3 / b_dx;
  ll A = (price_y - s4) / s2;

  long double s5 = price_x - (a_dx * A);
  ll B = s5 / b_dx;

  // assume rounding error +/- 10
  for (ll a = A - 10; a != A + 10; a++) {
    for (ll b = B - 10; b != B + 10; b++) {
      if (a < 0 || b < 0) {
        continue;
      }
      if (a_dx * a + b_dx * b == price_x && a_dy * a + b_dy * b == price_y) {
        combinations.push_back({a, b});
      }
    }
  }

  return combinations;
};
} // namespace

int main13() {
  int64_t result0 = 0;
  int64_t result1 = 0;

  for (auto m : input) {
    auto combinations = check1(m);
    if (combinations.empty()) {
      continue;
    }
    std::vector<ll> prices;
    for (auto [a, b] : combinations) {
      prices.push_back(a * 3 + b);
    }
    std::sort(prices.begin(), prices.end());
    result0 += prices.front();
  }

  for (auto m : input) {
    auto &[price_x, price_y] = m._prize;
    price_x += 10000000000000;
    price_y += 10000000000000;
    auto combinations = check2(m);
    if (combinations.empty()) {
      continue;
    }
    assert(combinations.size() == 1);
    auto [a, b] = combinations.front();
    result1 += a * 3 + b;
  }

  myprint(result0);
  myprint(result1);
  return 0;
}
